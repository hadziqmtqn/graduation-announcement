<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Attributes\Scope;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Database\Eloquent\Relations\HasOne;
use Illuminate\Support\Str;

class Course extends Model
{
    protected $fillable = [
        'slug',
        'code',
        'name',
        'is_active',
    ];

    protected function casts(): array
    {
        return [
            'slug' => 'string',
            'is_active' => 'boolean',
        ];
    }

    protected static function boot(): void
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::creating(function (Course $course) {
            $course->slug = Str::uuid()->toString();
            $course->code = strtoupper(Str::slug($course->code));
        });

        static::updating(function (Course $course) {
            $course->code = strtoupper(Str::slug($course->code));
        });
    }

    public function testScoreDetails(): HasMany
    {
        return $this->hasMany(TestScoreDetail::class, 'course_id');
    }

    public function testScoreDetail(): HasOne
    {
        return $this->hasOne(TestScoreDetail::class, 'course_id');
    }

    // TODO Scope
    #[Scope]
    protected function active(Builder $query): Builder
    {
        return $query->where('is_active', true);
    }
}
